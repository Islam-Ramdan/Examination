//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExaminationSystem
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExaminationEntities1 : DbContext
    {
        public ExaminationEntities1()
            : base("name=ExaminationEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<string> AddCourseTOStudent(Nullable<int> stdId, Nullable<int> crsId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddCourseTOStudent", stdIdParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkInstruct(Nullable<int> id, string fname)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkInstruct", idParameter, fnameParameter);
        }
    
        public virtual ObjectResult<courseList_Result> courseList(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<courseList_Result>("courseList", stdIdParameter);
        }
    
        public virtual ObjectResult<CoursesByInstructor_Result> CoursesByInstructor(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoursesByInstructor_Result>("CoursesByInstructor", ins_idParameter);
        }
    
        public virtual ObjectResult<CourseTopics_Result> CourseTopics(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseTopics_Result>("CourseTopics", courseIDParameter);
        }
    
        public virtual ObjectResult<string> DeleteChoices(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteChoices", questionIDParameter);
        }
    
        public virtual ObjectResult<string> deleteCourse(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteCourse", idParameter);
        }
    
        public virtual ObjectResult<string> deleteFromInstructor(Nullable<int> ins_Id)
        {
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteFromInstructor", ins_IdParameter);
        }
    
        public virtual ObjectResult<string> DeleteQuestion(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteQuestion", questionIDParameter);
        }
    
        public virtual ObjectResult<string> deleteStudent(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteStudent", stdIdParameter);
        }
    
        public virtual ObjectResult<string> deleteStudentCourse(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteStudentCourse", stdIdParameter);
        }
    
        public virtual ObjectResult<string> deleteTopic(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteTopic", idParameter);
        }
    
        public virtual ObjectResult<string> Department_insertion(string dpetName, Nullable<int> insId)
        {
            var dpetNameParameter = dpetName != null ?
                new ObjectParameter("DpetName", dpetName) :
                new ObjectParameter("DpetName", typeof(string));
    
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Department_insertion", dpetNameParameter, insIdParameter);
        }
    
        public virtual ObjectResult<string> DepartmentDeletion(string colName, string val)
        {
            var colNameParameter = colName != null ?
                new ObjectParameter("colName", colName) :
                new ObjectParameter("colName", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DepartmentDeletion", colNameParameter, valParameter);
        }
    
        public virtual ObjectResult<DepartmentSelection_Result> DepartmentSelection(string colName, string val)
        {
            var colNameParameter = colName != null ?
                new ObjectParameter("colName", colName) :
                new ObjectParameter("colName", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepartmentSelection_Result>("DepartmentSelection", colNameParameter, valParameter);
        }
    
        public virtual ObjectResult<string> DepartmentUpdate(Nullable<int> did, string colName, string val)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            var colNameParameter = colName != null ?
                new ObjectParameter("colName", colName) :
                new ObjectParameter("colName", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DepartmentUpdate", didParameter, colNameParameter, valParameter);
        }
    
        public virtual ObjectResult<string> ExamAnswers(Nullable<int> std_id, Nullable<int> exam_id, string std_answer)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            var std_answerParameter = std_answer != null ?
                new ObjectParameter("std_answer", std_answer) :
                new ObjectParameter("std_answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ExamAnswers", std_idParameter, exam_idParameter, std_answerParameter);
        }
    
        public virtual ObjectResult<string> examCorrection(Nullable<int> exam_id, Nullable<int> std_id, Nullable<int> crs_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("examCorrection", exam_idParameter, std_idParameter, crs_idParameter);
        }
    
        public virtual ObjectResult<examsList_Result> examsList(Nullable<int> stdId, Nullable<int> crsId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("CrsId", crsId) :
                new ObjectParameter("CrsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<examsList_Result>("examsList", stdIdParameter, crsIdParameter);
        }
    
        public virtual ObjectResult<string> GenerateExam(Nullable<int> crs_id, Nullable<int> mcsNumber, Nullable<int> tFNumber, Nullable<int> dur)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var mcsNumberParameter = mcsNumber.HasValue ?
                new ObjectParameter("mcsNumber", mcsNumber) :
                new ObjectParameter("mcsNumber", typeof(int));
    
            var tFNumberParameter = tFNumber.HasValue ?
                new ObjectParameter("TFNumber", tFNumber) :
                new ObjectParameter("TFNumber", typeof(int));
    
            var durParameter = dur.HasValue ?
                new ObjectParameter("dur", dur) :
                new ObjectParameter("dur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GenerateExam", crs_idParameter, mcsNumberParameter, tFNumberParameter, durParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCrsId(string crs_name)
        {
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCrsId", crs_nameParameter);
        }
    
        public virtual ObjectResult<GetExam_Result> GetExam(Nullable<int> exId)
        {
            var exIdParameter = exId.HasValue ?
                new ObjectParameter("exId", exId) :
                new ObjectParameter("exId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExam_Result>("GetExam", exIdParameter);
        }
    
        public virtual ObjectResult<getExamQustions_Result> getExamQustions(Nullable<int> exam_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getExamQustions_Result>("getExamQustions", exam_idParameter);
        }
    
        public virtual ObjectResult<getStudentCourses_Result> getStudentCourses(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStudentCourses_Result>("getStudentCourses", stdIdParameter);
        }
    
        public virtual ObjectResult<GetStudents_Result> GetStudents(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudents_Result>("GetStudents", stdIdParameter);
        }
    
        public virtual ObjectResult<GetSudentGrades_Result> GetSudentGrades(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSudentGrades_Result>("GetSudentGrades", stdIdParameter);
        }
    
        public virtual ObjectResult<GetUnsolvedExams_Result> GetUnsolvedExams(Nullable<int> stdID)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("StdID", stdID) :
                new ObjectParameter("StdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnsolvedExams_Result>("GetUnsolvedExams", stdIDParameter);
        }
    
        public virtual ObjectResult<GetUnsolvedExamsNames_Result> GetUnsolvedExamsNames(Nullable<int> stdID)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("StdID", stdID) :
                new ObjectParameter("StdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnsolvedExamsNames_Result>("GetUnsolvedExamsNames", stdIDParameter);
        }
    
        public virtual ObjectResult<string> INSAddExam(Nullable<int> ins_id, string crsName, Nullable<int> mcsNumber, Nullable<int> tFNumber, Nullable<int> dur)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var crsNameParameter = crsName != null ?
                new ObjectParameter("crsName", crsName) :
                new ObjectParameter("crsName", typeof(string));
    
            var mcsNumberParameter = mcsNumber.HasValue ?
                new ObjectParameter("mcsNumber", mcsNumber) :
                new ObjectParameter("mcsNumber", typeof(int));
    
            var tFNumberParameter = tFNumber.HasValue ?
                new ObjectParameter("TFNumber", tFNumber) :
                new ObjectParameter("TFNumber", typeof(int));
    
            var durParameter = dur.HasValue ?
                new ObjectParameter("dur", dur) :
                new ObjectParameter("dur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("INSAddExam", ins_idParameter, crsNameParameter, mcsNumberParameter, tFNumberParameter, durParameter);
        }
    
        public virtual ObjectResult<string> InsertChoice(Nullable<int> chNum, Nullable<int> questionID, string chDetails)
        {
            var chNumParameter = chNum.HasValue ?
                new ObjectParameter("chNum", chNum) :
                new ObjectParameter("chNum", typeof(int));
    
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            var chDetailsParameter = chDetails != null ?
                new ObjectParameter("chDetails", chDetails) :
                new ObjectParameter("chDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertChoice", chNumParameter, questionIDParameter, chDetailsParameter);
        }
    
        public virtual ObjectResult<string> insertCourse(string name, Nullable<int> p_duration, Nullable<int> instructor_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var p_durationParameter = p_duration.HasValue ?
                new ObjectParameter("p_duration", p_duration) :
                new ObjectParameter("p_duration", typeof(int));
    
            var instructor_idParameter = instructor_id.HasValue ?
                new ObjectParameter("instructor_id", instructor_id) :
                new ObjectParameter("instructor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertCourse", nameParameter, p_durationParameter, instructor_idParameter);
        }
    
        public virtual ObjectResult<string> insertIntoInstructor(string fName, string lName, Nullable<int> dId, Nullable<int> sal, Nullable<System.DateTime> hDate)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("lName", lName) :
                new ObjectParameter("lName", typeof(string));
    
            var dIdParameter = dId.HasValue ?
                new ObjectParameter("dId", dId) :
                new ObjectParameter("dId", typeof(int));
    
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(int));
    
            var hDateParameter = hDate.HasValue ?
                new ObjectParameter("hDate", hDate) :
                new ObjectParameter("hDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertIntoInstructor", fNameParameter, lNameParameter, dIdParameter, salParameter, hDateParameter);
        }
    
        public virtual ObjectResult<string> InsertQuestion(string description, string type, string answer, Nullable<int> courseID, Nullable<int> qPoints)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("courseID", courseID) :
                new ObjectParameter("courseID", typeof(int));
    
            var qPointsParameter = qPoints.HasValue ?
                new ObjectParameter("qPoints", qPoints) :
                new ObjectParameter("qPoints", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertQuestion", descriptionParameter, typeParameter, answerParameter, courseIDParameter, qPointsParameter);
        }
    
        public virtual ObjectResult<string> insertTpoic(string name, Nullable<int> course_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insertTpoic", nameParameter, course_idParameter);
        }
    
        public virtual ObjectResult<SelectChoices_Result> SelectChoices(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectChoices_Result>("SelectChoices", questionIDParameter);
        }
    
        public virtual ObjectResult<selectCourse_Result> selectCourse(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectCourse_Result>("selectCourse", idParameter);
        }
    
        public virtual ObjectResult<selectFromInstructor_Result> selectFromInstructor(Nullable<int> ins_id)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectFromInstructor_Result>("selectFromInstructor", ins_idParameter);
        }
    
        public virtual ObjectResult<selectInstructors_Result> selectInstructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectInstructors_Result>("selectInstructors");
        }
    
        public virtual ObjectResult<SelectQuestion_Result> SelectQuestion(Nullable<int> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectQuestion_Result>("SelectQuestion", questionIDParameter);
        }
    
        public virtual ObjectResult<selectStudents_Result> selectStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectStudents_Result>("selectStudents");
        }
    
        public virtual ObjectResult<selectTopic_Result> selectTopic(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectTopic_Result>("selectTopic", idParameter);
        }
    
        public virtual ObjectResult<StudentExam_Q_Ans_Result> StudentExam_Q_Ans(Nullable<int> studId, Nullable<int> examId)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("studId", studId) :
                new ObjectParameter("studId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentExam_Q_Ans_Result>("StudentExam_Q_Ans", studIdParameter, examIdParameter);
        }
    
        public virtual ObjectResult<StudentExam_Q_Ans_Subject_Result> StudentExam_Q_Ans_Subject(Nullable<int> studId, Nullable<int> examId, Nullable<int> course_id)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("studId", studId) :
                new ObjectParameter("studId", typeof(int));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentExam_Q_Ans_Subject_Result>("StudentExam_Q_Ans_Subject", studIdParameter, examIdParameter, course_idParameter);
        }
    
        public virtual ObjectResult<StudInfoReport_Result> StudInfoReport(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudInfoReport_Result>("StudInfoReport", deptIdParameter);
        }
    
        public virtual ObjectResult<topicsPerCourse_Result> topicsPerCourse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<topicsPerCourse_Result>("topicsPerCourse");
        }
    
        public virtual ObjectResult<string> UpdateChoice(Nullable<int> chNum, Nullable<int> questionID, string chDetails)
        {
            var chNumParameter = chNum.HasValue ?
                new ObjectParameter("chNum", chNum) :
                new ObjectParameter("chNum", typeof(int));
    
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            var chDetailsParameter = chDetails != null ?
                new ObjectParameter("chDetails", chDetails) :
                new ObjectParameter("chDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateChoice", chNumParameter, questionIDParameter, chDetailsParameter);
        }
    
        public virtual ObjectResult<string> updateCourse(Nullable<int> id, string columnName, string value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("columnName", columnName) :
                new ObjectParameter("columnName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateCourse", idParameter, columnNameParameter, valueParameter);
        }
    
        public virtual int updateInstructor(Nullable<int> ins_id, string col, string val)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("ins_id", ins_id) :
                new ObjectParameter("ins_id", typeof(int));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateInstructor", ins_idParameter, colParameter, valParameter);
        }
    
        public virtual int UpdateQuestion(Nullable<int> questionID, string col, string newVal)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("questionID", questionID) :
                new ObjectParameter("questionID", typeof(int));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            var newValParameter = newVal != null ?
                new ObjectParameter("newVal", newVal) :
                new ObjectParameter("newVal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQuestion", questionIDParameter, colParameter, newValParameter);
        }
    
        public virtual int updateStudent(Nullable<int> stdId, string columnName, string value)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("columnName", columnName) :
                new ObjectParameter("columnName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateStudent", stdIdParameter, columnNameParameter, valueParameter);
        }
    
        public virtual int updateStudentCourse(Nullable<int> stdId, string columnName, Nullable<int> value)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("columnName", columnName) :
                new ObjectParameter("columnName", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateStudentCourse", stdIdParameter, columnNameParameter, valueParameter);
        }
    
        public virtual ObjectResult<string> updateTopic(Nullable<int> id, string columnName, string value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("columnName", columnName) :
                new ObjectParameter("columnName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateTopic", idParameter, columnNameParameter, valueParameter);
        }
    }
}
